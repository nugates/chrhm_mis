@model SKMISApplication.Models.VendorModel
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm("Create", "Vendor", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">Vendor Details</h3>
                        @*<div style="float: right;">

                                @Html.ActionLink("Back to List", "Index", "Beneficiary", new { @class = "btn btn-block btn-primary" })
                            </div>*@
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @Html.AntiForgeryToken()

                        <div class="header-div">
                            <div class="form-horizontal">
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="glyphicon glyphicon-user"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.VendorTypeID, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="glyphicon glyphicon-list-alt"></i>
                                                    </div>
                                                    @Html.DropDownListFor(model => model.VendorTypeID, new SelectList(Model.VendorTypeList, "Value", "Text"),
                       "Select Item", htmlAttributes: new { @class = "form-control select2", @id = "vendorid" })
                                                </div>
                                                </div>
                                        </div>

                                    </div>
                                    <div class="col-md-6">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="glyphicon glyphicon-phone"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group date">
                                                    <div class="input-group-addon">
                                                        <i class="glyphicon glyphicon-home"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "Address", placeholder = "Address" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>

            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">Account Details</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @Html.AntiForgeryToken()

                        <div class="header-div">
                            <div class="form-horizontal">
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ACName, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="fa fa-book"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.ACName, new { htmlAttributes = new { @class = "form-control", placeholder = "A/C Name" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.ACName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="fa fa-book"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", placeholder = "Bank Name" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="fa fa-book"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control", placeholder = "Branch Name" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Document</label>
                                            <div class="form-group">
                                                <div class="col-md-3">
                                                    <table>
                                                        <tr>
                                                            <td>
                                                                <span class="input-group-btn">
                                                                    <span class="btn btn-default btn-file">
                                                                        Browse… <input type="file" name="file" id="imgInp" />
                                                                    </span>
                                                                </span>
                                                            </td>
                                                            <td>
                                                                <input type="text" id="img-name" class="form-control" style="width:240px" readonly>
                                                            </td>
                                                        </tr>
                                                    </table>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ACNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="fa fa-book"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.ACNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "A/C Number" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.ACNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IFSC, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group date">
                                                    <div class="input-group-addon">
                                                        <i class="fa fa-book"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.IFSC, new { htmlAttributes = new { @class = "form-control", @id = "IFSC", placeholder = "IFSC Code" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.IFSC, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.PanCard, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    <div class="input-group-addon">
                                                        <i class="fa fa-book"></i>
                                                    </div>
                                                    @Html.EditorFor(model => model.PanCard, new { htmlAttributes = new { @class = "form-control", placeholder = "Pan Card" } })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.PanCard, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                       

                                    </div>
                                    <div class="row" style="margin-bottom: 15px;">
                                        <div class="col-lg-12">
                                            <hr />
                                            <div class="col-lg-3"></div>
                                            <div class="col-lg-3" style="text-align: left">
                                                <input type="submit" value="save" class="btn btn-block btn-success" />
                                            </div>
                                            <div class="col-lg-3" style="text-align: center">
                                                @Html.ActionLink("Cancel", "Index", "", htmlAttributes: new { @class = "btn btn-block btn-danger" })
                                                @*<input type="submit" value="Cancel" class="btn btn-block btn-danger" />*@
                                            </div>
                                            <div class="col-lg-3"></div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
        </div>
    </section>
}
<style>
    .btn-file {
        position: relative;
        overflow: hidden;
    }

        .btn-file input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            min-width: 100%;
            min-height: 100%;
            font-size: 100px;
            text-align: right;
            filter: alpha(opacity=0);
            opacity: 0;
            outline: none;
            background: white;
            cursor: inherit;
            display: block;
        }

    #img-upload {
        width: 100%;
    }

    #img-uploadgrid {
        width: 20%;
    }
</style>
<script>
    $(document).ready(function () {

        function readURL(input) {
            var extension = input.files[0].name.substr((input.files[0].name.lastIndexOf('.') + 1));
            var size = input.files[0].size / 1024;
            $('#img-name').val(input.files[0].name);
            if (extension == "png" || "jpeg") {
                if (size <= 300) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#img-upload').attr('src', e.target.result);
                        }

                        reader.readAsDataURL(input.files[0]);
                    }

                    $(document).on('change', '.btn-file :file', function () {
                        var input = $(this),
                            label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                        input.trigger('fileselect', [label]);
                    });

                    $('.btn-file :file').on('fileselect', function (event, label) {
                        var input = $(this).parents('.input-group').find(':text'),
                            log = label;
                        if (input.length) {
                            input.val(log);
                        } else {
                            if (log);
                        }
                    });
                }
                else {
                    alert("exceed file size");
                    $("#imgInp")[0].value = "";
                    $("#imgInp").val("");
                }
            }
            else {
                alert("please enter files with format: ")
            }
        }

        $("#imgInp").change(function () {
            readURL(this);
        });
    });
    function previewImg(fPath) {
        window.open('http://' + window.location.host + fPath, "_blank");
    }
</script>