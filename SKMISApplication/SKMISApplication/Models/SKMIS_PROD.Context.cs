//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SKMISApplication.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SKMIS_PRODEntities : DbContext
    {
        public SKMIS_PRODEntities()
            : base("name=SKMIS_PRODEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ADCMaster> ADCMasters { get; set; }
        public virtual DbSet<BeneficiaryDocument> BeneficiaryDocuments { get; set; }
        public virtual DbSet<BeneficiaryEntry> BeneficiaryEntries { get; set; }
        public virtual DbSet<BlockMaster> BlockMasters { get; set; }
        public virtual DbSet<ConstituencyMaster> ConstituencyMasters { get; set; }
        public virtual DbSet<GPUMaster> GPUMasters { get; set; }
        public virtual DbSet<InventoryMaster> InventoryMasters { get; set; }
        public virtual DbSet<ItemAllocation> ItemAllocations { get; set; }
        public virtual DbSet<ItemMaster> ItemMasters { get; set; }
        public virtual DbSet<Progress> Progresses { get; set; }
        public virtual DbSet<StoreMaster> StoreMasters { get; set; }
        public virtual DbSet<UnitMaster> UnitMasters { get; set; }
        public virtual DbSet<VendorMaster> VendorMasters { get; set; }
        public virtual DbSet<VendorType> VendorTypes { get; set; }
        public virtual DbSet<WardMaster> WardMasters { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
        public virtual DbSet<AC_Category> AC_Category { get; set; }
        public virtual DbSet<AC_CategoryItem> AC_CategoryItem { get; set; }
        public virtual DbSet<AC_AccountsEntry> AC_AccountsEntry { get; set; }
    
        public virtual int BenificiaryAdvanceSearch(string stringToFind, string schema, string table)
        {
            var stringToFindParameter = stringToFind != null ?
                new ObjectParameter("stringToFind", stringToFind) :
                new ObjectParameter("stringToFind", typeof(string));
    
            var schemaParameter = schema != null ?
                new ObjectParameter("schema", schema) :
                new ObjectParameter("schema", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BenificiaryAdvanceSearch", stringToFindParameter, schemaParameter, tableParameter);
        }
    
        public virtual ObjectResult<GetDataToSyncToCloudFromLocal_Result> GetDataToSyncToCloudFromLocal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataToSyncToCloudFromLocal_Result>("GetDataToSyncToCloudFromLocal");
        }
    
        public virtual ObjectResult<GetDataToSyncToLocalFromCloud_Result> GetDataToSyncToLocalFromCloud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataToSyncToLocalFromCloud_Result>("GetDataToSyncToLocalFromCloud");
        }
    
        public virtual ObjectResult<GetItemDetailsList_Result> GetItemDetailsList(string cid, string bid)
        {
            var cidParameter = cid != null ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(string));
    
            var bidParameter = bid != null ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetItemDetailsList_Result>("GetItemDetailsList", cidParameter, bidParameter);
        }
    
        public virtual int sp_FindStringInTable(string stringToFind, string schema, string table)
        {
            var stringToFindParameter = stringToFind != null ?
                new ObjectParameter("stringToFind", stringToFind) :
                new ObjectParameter("stringToFind", typeof(string));
    
            var schemaParameter = schema != null ?
                new ObjectParameter("schema", schema) :
                new ObjectParameter("schema", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FindStringInTable", stringToFindParameter, schemaParameter, tableParameter);
        }
    
        public virtual int SyncToCloudFromLocal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncToCloudFromLocal");
        }
    
        public virtual int SyncToCloudFromLocal_UpdateStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncToCloudFromLocal_UpdateStatus");
        }
    
        public virtual int SyncToLocalFromCloud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncToLocalFromCloud");
        }
    
        public virtual int SyncToLocalFromCloud_UpdateStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncToLocalFromCloud_UpdateStatus");
        }
    }
}
