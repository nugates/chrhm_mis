@model SKMISApplication.Models.DriverEntryModel

@{
    ViewBag.Title = "Create";
}

<script>
    $(function () {
        $('.datepicker').datepicker({
            autoclose: true
        });
    });

</script>
@using (Html.BeginForm("Create", "Driver", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">Create Driver</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @Html.AntiForgeryToken()
                        
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DriverName, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DriverName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.DriverContactNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.DriverContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DriverContactNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.WorkContactNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.WorkContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.WorkContactNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            <div class="input-group date">
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control  pull-right datepicker", placeholder = "MM/DD/YYYY" } })
                                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    @*<div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-3">
                                            <span class="input-group-btn">
                                                <span class="btn btn-default btn-file">
                                                    Browse… <input type="file" name="file" id="imgInp" />
                                                </span>
                                            </span>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="text" id="img-name" class="form-control" readonly>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        <img id='img-upload' height="100" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.LicenseNo, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.LicenseNo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LicenseNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.LicenseState, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.LicenseState, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LicenseState, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.LicenseExpiryDate, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            <div class="input-group date">
                                                <div class="input-group-addon">
                                                    <i class="fa fa-calendar"></i>
                                                </div>
                                                @*<input id="txtLoadDate" class="form-control pull-right datepicker" type="text" placeholder="mm/dd/yyyy" />*@
                                                @Html.EditorFor(model => model.LicenseExpiryDate, new { htmlAttributes = new { @class = "form-control  pull-right datepicker", placeholder = "MM/DD/YYYY" } })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.LicenseExpiryDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>

                                    @*<div class="form-group" style="padding-top: 5px;">
                                            @Html.LabelFor(model => model.AlternateContactNo, htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.AlternateContactNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.AlternateContactNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>*@
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.DriverAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.DriverAddress, new { htmlAttributes = new { @class = "form-control" }, style = "width:100%;height:100%" })
                                            @Html.ValidationMessageFor(model => model.DriverAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Pin, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group" style="padding-top: 5px;">
                                        @Html.LabelFor(model => model.Misc, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.TextAreaFor(model => model.Misc, new { htmlAttributes = new { @class = "form-control" }, style = "width:100%;height:100%" })
                                            @Html.ValidationMessageFor(model => model.Misc, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                                @*<div class="form-group" style="padding-top: 5px;">
                                        <div class="col-md-offset-2 col-md-12">
                                            <input type="submit" value="Create" class="btn btn-default" />
                                        </div>
                                    </div>*@
                            </div>


                            <div class="row" style="margin-bottom: 15px;">
                                <div class="col-lg-12">
                                    <hr />
                                    <div class="col-lg-3"></div>
                                    <div class="col-lg-3" style="text-align: left">
                                        <input type="submit" value="Save" class="btn btn-block btn-success" />
                                    </div>
                                    <div class="col-lg-3" style="text-align: center">
                                        <input type="submit" value="Cancel" class="btn btn-block btn-danger" />
                                    </div>
                                    <div class="col-lg-3"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
        </div>
    </section>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    .btn-file {
        position: relative;
        overflow: hidden;
    }

        .btn-file input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            min-width: 100%;
            min-height: 100%;
            font-size: 100px;
            text-align: right;
            filter: alpha(opacity=0);
            opacity: 0;
            outline: none;
            background: white;
            cursor: inherit;
            display: block;
        }

    #img-upload {
        float:right;
        width: 150px;
        margin-right:20px;
    }

    #img-uploadgrid {
        width: 20%;
    }
</style>
<script>
    $(document).ready(function () {
        function readURL(input) {
            var extension = input.files[0].name.substr((input.files[0].name.lastIndexOf('.') + 1));
            var size = input.files[0].size / 1024;
            $('#img-name').val(input.files[0].name);
            if (extension == "png" || "jpeg") {
                if (size <= 300) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#img-upload').attr('src', e.target.result);
                        }

                        reader.readAsDataURL(input.files[0]);
                    }

                    $(document).on('change', '.btn-file :file', function () {
                        var input = $(this),
                            label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                        input.trigger('fileselect', [label]);
                    });

                    $('.btn-file :file').on('fileselect', function (event, label) {
                        var input = $(this).parents('.input-group').find(':text'),
                            log = label;
                        if (input.length) {
                            input.val(log);
                        } else {
                            if (log);
                        }
                    });
                }
                else {
                    alert("exceed file size");
                    $("#imgInp")[0].value = "";
                }
            }
            else {
                alert("please enter files with format: ")
            }
        }

        $("#imgInp").change(function () {
            readURL(this);
        });
    });
</script>
